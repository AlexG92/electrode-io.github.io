---
title:  "Build More"
permalink: docs/build_more.html
toplevel: "Getting Started: Quick Guide"
---
<p class="body-text">Here at WalmartLabs we love to <a href="http://www.walmartlabs.com/2016/08/weve-moved-follow-walmartlabs-on-medium/">build</a>. Navigate to <'your-awesome-app'>/client/components/home.jsx:</p>

```javascript
    import React from "react";

    export class Home extends React.Component {
      render() {
        return (
          <div><h1>Hello <a href="https://github.com/electrode-io">Electrode</a></h1></div>
        );
      }
    }
```

<P> We will need a place to keep all of the resources we learned in the <a href="#" class="doc-links">Getting Started: Quick Guide</a> organized. Let's make a library for our present stack and technologies we are excited about! Copy the code below and paste it into <'your-awesome-app'>/client/components/home.jsx:</p>

```javascript
  import React from "react";

  export class Home extends React.Component {
    render()) {
      return (
        <div>
          <div><h1 className="title">Electrode Resource List</h1></div>
          <div className="resource"><a href="https://facebook.github.io/react/index.html">React</a></div>
          <div className="resource"><a href="http://redux.js.org/docs/basics/UsageWithReact.html">Redux</a></div>
          <div className="resource"><a href="http://hapijs.com/">Hapi</a></div>
          <div className="resource"><a href="https://nodejs.org/en/">Node</a></div>
          <div className="resource"><a href="http://stylus-lang.com/">Stylus</a></div>
          <div className="resource"><a href="https://github.com/electrode-io/electrode-confippet">Electrode-Confippet</a></div>
          <div className="resource"><a href="https://github.com/electrode-io/electrode/server">Electrode-Server</a></div>
          <div className="resource"><a href="https://github.com/electrode-io/redux-router-engine">Redux-Router-Engine</a></div>
        </div>
      );
    }
  }
```

<p class="body-text">Let's finish the UI by adding styles. Navigate to <your-awesome-app>/client/styles/base.styl and add the code below. A reminder: <a href="http://stylus-lang.com/" class="doc-links">Stylus</a> is white space sensitive. </p>

<div class="snippet">
  <pre><code>
    a
      font-size: 14px
      color: red

      &hover
        blue

    .resource
      margin-bottom: 10px

    .title
      border-bottom: 2px solid blue
      text-align: center
  </code></pre>
</div>

<p class="body-text">Run our new favorite command to see your tech list.</p>

<div class="snippet">
  <pre><code>
    gulp dev
  </code></pre>
</div>

<h5>Deploy</h5>

<p class="body-text">We're almost finished. The final step is to deploy your-awesome-app and share it with your fellow developers using <a href="https://devcenter.heroku.com/categories/deployment" class="doc-links">Heroku</a> . We have listed the steps below, but feel free to learn more about Heroku <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction" class="doc-links">here</a>. These instructions assume you have a GitHub account. Navigate to your GitHub and create a new repo 'your-awesome-app'. Hit the clone your-awesome-repo and follow the steps below in order:</p>

<div class="snippet">
  <pre><code>
    $ git init
    $ git add .
    $ git commit -m 'first commit'
    $ git remote add origin https://github.com/your-Github-name/your-awesome-app.git
    $ git push -u origin master
  </code></pre>
</div>

<p>Navigate to the <a href="https://signup.heroku.com/dc" class="doc-links" >Heroku site</a> and set up a free account. This will help streamline our deployment process (we will do this several times).</p>

<p class="body-text">Next, let's quickly deploy your-awesome-app from the command line. <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up" class="doc-links">Click here </a>to download and install the Heroku CLI for your machine.</p>

<p>When you are finished installing, log in using the email address and password you used when creating your Heroku account.</p>

<div class="snippet">
  <pre><code>
    heroku login
  </code></pre>
</div>

<p>Enter your Heroku credentials.</p>

<div class="snippet">
  <pre><code>
    Email: your-example-email@walmartlabs.com
    Password:
  </code></pre>
</div>

<p>You should see a terminal message 'Logged in as your-example-email@walmartlabs.com'. Now, let's deploy!</p>

<p class="body-text">We need to specify the <a href="https://devcenter.heroku.com/articles/node-best-practices" class="doc-links">version of node</a> you are using on your machine into our package.json. Add the code below the "author" section and before the "contributers" section of your package.json.

<div class="snippet">
  <pre><code>
    "engines": {
      "node": "4.2.x"
    },
  </code></pre>
</div>

<p class="body-text">It should now look like this:</p>

<div class="snippet">
  <pre><code>
    {
      "name": "your-awesome-app",
      "version": "0.0.0",
      "description": "your-app-description",
      "homepage": "your-awesome-app",
      "author": {
        "name": "your-name",
        "email": "your-email-address@email.com,
        "url": "your-app-url"
      },
      "engines": {
        "node": "4.2.x"
      },
      "contributors": [],
      "files": [
        "lib"
      ],
      "main": "lib/index.js",
      "keywords": [
        "test"
      ],
      "repository": {
        "type": "git",
        "url": "your-repo-url"
      },
      "license": "Apache-2.0",
      "scripts": {
        "test": "gulp test",
        "coverage": "gulp check"
      },
      "dependencies": {
        "bluebird": "^2.10.2",
        "electrode-router-resolver-engine": "^1.0.0",
        "electrode-server": "^1.0.0",
        "electrode-static-paths": "^1.0.0",
        "lodash": "^4.10.1"
      },
      "devDependencies": {
        "electrode-archetype-react-app": "^1.0.0",
        "electrode-archetype-react-app-dev": "^1.0.0",
        "gulp": "^3.9.1"
      }
    }
  </code></pre>
</div>

<p>Create an app on Heroku (which prepares Heroku to receive your source code). This will also create a git remote called heroku and generate a random name:</p>

<div class="snippet">
  <pre><code>
    heroku create
  </code></pre>
</div>

<p>Or you can also create an app that will generate a your app's name (if it is available):</p>

<div class="snippet">
  <pre><code>
    heroku create your-awesome-app
  </code></pre>
</div>

<p>Deploy your code:</p>

<div class="snippet">
  <pre><code>
    git push heroku master
  </code></pre>
</div>

<p>Visit the app at the generated URL by using this command:</p>

<div class="snippet">
  <pre><code>
    heroku open
  </code></pre>
</div>

<p>One last thing we can do is define a <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#define-a-procfile class="doc-links">Procfile</a>, a text file to explicitly declare what command can start your-awesome-app. Creat a file name 'Procfile' in your root directory. Add the code below:</p>

<div class="snippet">
  <pre><code>
    web: node index.js
  </code></pre>
</div>

<p>Deploy this latest code:</p>

<div class="snippet">
  <pre><code>
    git push heroku master
  </code></pre>
</div>

<p>And... you did it! We will build even more in our <a href="#" class="doc-link">Getting Started: Intermediate</a> and cover complex topics like routing, server plugins and other powerful deployment software.</p>
